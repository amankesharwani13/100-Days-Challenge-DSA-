53. Maximum Subarray
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        int MaxSum = nums[0];
        int currSum = 0;
        for(int i=0;i<nums.size();i++){
            currSum += nums[i];
            MaxSum = max(MaxSum, currSum);
            if(currSum < 0)currSum = 0;
        }
        return MaxSum;
    }
};


121. Best Time to Buy and Sell Stock
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int maxProf = INT_MIN;
        int minPrice = INT_MAX;
        for(int i=0;i<prices.size();i++){
            minPrice = min(minPrice, prices[i]);
            maxProf = max(maxProf, prices[i] - minPrice);
        }
        return maxProf;
    }
};
