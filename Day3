1448. Count Good Nodes in Binary Tree
class Solution {
public:
    void solve(TreeNode* root, int &ans,int maxSoFar){
        if(root == NULL)return;
        maxSoFar = max(maxSoFar, root->val);
        if(root->left != NULL && root->left->val >= maxSoFar)ans++;
        if(root->right != NULL && root->right->val >= maxSoFar)ans++;
        solve(root->left,ans,maxSoFar);
        solve(root->right,ans,maxSoFar);
    }
    int goodNodes(TreeNode* root) {
        int ans = 1;
        solve(root, ans,INT_MIN);
        return ans;
    }
};

2486. Append Characters to String to Make Subsequence
class Solution {
public:
    int appendCharacters(string s, string t) {
        int j = 0;
        for(int i=0;i<s.length();i++){
            if(s[i] == t[j])j++;
        }
        return t.size() - j;
    }
};


