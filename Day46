1110. Delete Nodes And Return Forest
class Solution {
public:
    TreeNode* solve(TreeNode* root, unordered_set<int>&s, vector<TreeNode*> &ans){
        if(root == NULL)return NULL;
        root->left = solve(root->left, s, ans);
        root->right = solve(root->right, s, ans);
        if(s.find(root->val) != s.end()){
             if(root->left != NULL)ans.push_back(root->left);
             if(root->right != NULL)ans.push_back(root->right);
             delete root;
             return NULL;
        }
        return root;
    }
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        vector<TreeNode*>ans;
        unordered_set<int>s;
        for(int i=0;i<to_delete.size();i++){
            s.insert(to_delete[i]);
        }
        root = solve(root, s, ans);
        if(root != NULL)ans.push_back(root);
        return ans;
    }
};
