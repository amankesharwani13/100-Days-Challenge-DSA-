1482. Minimum Number of Days to Make m Bouquets
int get(vector<int>& bloomDay, int mid, int k){
    int count=0;
    int flow=0;
    for(int i=0;i<bloomDay.size();i++){
        if(bloomDay[i]<=mid){
            count++;
            if(count==k){
                flow++;
                count=0;
            }
        }
        else{
                count=0;
            }
    }
    return flow;
}
class Solution {
public:
    int minDays(vector<int>& bloomDay, int m, int k) {
        int mid;
        if(m>bloomDay.size()/k) return -1;
        int l=*min_element(bloomDay.begin(),bloomDay.end());
        int h=*max_element(bloomDay.begin(),bloomDay.end());
        while(l<=h){

        mid=l+(h-l)/2;
        if(get(bloomDay,mid,k)>=m){
            h=mid-1;
        }
        else{
            l=mid+1;
          }
        }
        return l;

    }
};
