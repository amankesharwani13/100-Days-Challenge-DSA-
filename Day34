2461. Maximum Sum of Distinct Subarrays With Length K
class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        long long ans = 0, sum = 0;
        if(nums.size() < k)return 0;
        unordered_map<int,int>m;
        for(int i=0;i<k;i++){
            sum += nums[i];
            m[nums[i]]++;
        }
        if(m.size() == k)ans = sum;
        for(int i=k;i<nums.size();i++){
            sum += (nums[i] - nums[i-k]);
            m[nums[i]]++;
            m[nums[i-k]]--;
            if(m[nums[i-k]] == 0)m.erase(nums[i-k]);
            if(m.size() == k)ans = max(sum, ans);
        }
        return ans;
    }
};
