2582. Pass the Pillow
class Solution {
public:
    int passThePillow(int n, int time) {
        int direction = 1, index = 1;
        int full_round = 2*(n-1);
        time %= (full_round);
        for(int i=0;i<time;i++){
            index += direction;
            if(index == n || index == 1){
                direction *= -1;
            }
        }
        return index;
    }
};


25. Reverse Nodes in k-Group
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        vector<int>v;
        ListNode* p = head;
        ListNode* q = head;
        while(p != NULL){
            v.push_back(p->val);
            p = p->next;
        }
        int num = v.size()/k;
        for(int i=0;i<v.size() && num > 0; i+=k){
            reverse(v.begin()+i, v.begin()+i+k);
            num--;
        }
        int i = 0;
        while(q != NULL && i < v.size()){
            q->val = v[i++];
            q = q->next;
        }
        return head;
    }
};
