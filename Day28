2192. All Ancestors of a Node in a Directed Acyclic Graph
class Solution {
public:
    void dfs(int index, vector<bool>& visited, vector<vector<int>>& adj, set<int>&s) {
        visited[index] = 1;
        for (auto x : adj[index]) {
            if (!visited[x]) {
               dfs(x, visited, adj, s);
            }
            s.insert(x);
        }
    }
    vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {
        vector<vector<int>> ans;
        int m = edges.size();
        vector<vector<int>> adj(n + 1);
        for (int i = 0; i < m; i++) {
            adj[edges[i][1]].push_back(edges[i][0]);
        }
        for (int i = 0; i < n; i++) {
            vector<int> v;
            set<int>s;
            vector<bool> visited(n, 0);
            dfs(i, visited, adj, s);
            for(auto x:s)v.push_back(x);
            ans.push_back(v);
        }
        return ans;
    }
};
