1038. Binary Search Tree to Greater Sum Tree
class Solution {
public:
    void solve(TreeNode* p, int &currSum){
        if(p == NULL)return;
        solve(p->right, currSum);
        currSum = currSum + p->val;
        p->val = currSum;
        solve(p->left, currSum);
    }
    TreeNode* bstToGst(TreeNode* root) {
        if(root == NULL)return root;
        TreeNode* p = root;
        int currSum  = 0;
        solve(p, currSum);
        return root;
    }
};

48. Rotate Image
class Solution {
public:
    void rotate(vector<vector<int>>& matrix) {
        int n =matrix.size();
        for(int i=0;i<n-1;i++){
            for(int j=i+1;j<n;j++){
                swap(matrix[i][j],matrix[j][i]);
            }
        }
        for(int i=0;i<n;i++){
        reverse(matrix[i].begin(), matrix[i].end());
        }
    }
};
